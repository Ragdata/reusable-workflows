####################################################################
# super-linter.yml
####################################################################
# Super Linter Reusable Workflow
#
# File:         super-linter.yml
# Version:      1.0
# Author:       Ragdata
# Date:         06/07/2024
# License:      MIT License
# Copyright:    Copyright Â© 2024 Darren (Ragdata) Poulton
####################################################################
name: Super Linter Reusable Workflow

on:
    # Allows this workflow to be called by other workflows
    workflow_call:
        # For a list of all possible super-linter inputs, see: https://github.com/marketplace/actions/super-linter
        inputs:
            bash_severity:
                description: "Specify the minimum severity of errors to consider in shellcheck. Valid values in order of severity are error, warning, info and style."
                required: false
                type: string
                default: "style"
            create_log_file:
                description: "If set to true, it creates the log file. You can set the log filename using the LOG_FILE environment variable. This overrides any existing log files."
                required: false
                type: boolean
                default: false
            disable_errors:
                description: "Flag to have the linter complete with exit code 0 even if errors were detected."
                required: false
                type: boolean
                default: false
            dockerfile_hadolint_file_name:
                description: "** Filename for hadolint configuration (ex: .hadolintlintrc.yaml)"
                required: false
                type: string
                default: ".hadolint.yml"
            filter_regex_exclude:
                description: "Regular expression defining which files will be excluded from linting (ex: .*src/test.*). Not setting this variable means to process all files."
                required: false
                type: string
            filter_regex_include:
                description: "Regular expression defining which files will be processed by linters (ex: .*src/.*). Not setting this variable means to process all files. FILTER_REGEX_INCLUDE is evaluated before FILTER_REGEX_EXCLUDE."
                required: false
                type: string
            ignore_generated_files:
                description: "If set to true, super-linter will ignore all the files with @generated marker but without @not-generated marker."
                required: false
                type: boolean
                default: false
            ignore_gitignored_files:
                description: "If set to true, super-linter will ignore all the files that are ignored by Git."
                required: false
                type: boolean
                default: false
            log_level:
                description: "How much output the script will generate to the console. One of ERROR, WARN, NOTICE, INFO, or DEBUG."
                required: false
                type: string
                default: "INFO"
            save_super_linter_output:
                description: "If set to true, super-linter will save its output to ${DEFAULT_WORKSPACE}/${SUPER_LINTER_OUTPUT_DIRECTORY_NAME}"
                required: false
                type: boolean
                default: false
            super_linter_output_directory_name:
                description: "Name of the directory where super-linter saves its output."
                required: false
                type: string
                default: "super-linter-output"
            suppress_file_type_warn:
                description: "If set to true, will hide warning messages about files without their proper extensions. Default is false"
                required: false
                type: boolean
                default: false
            suppress_possum:
                description: "If set to true, will hide the ASCII possum at top of log output. Default is false"
                required: false
                type: boolean
                default: false
            validate_all_codebase:
                description: "** Will parse the entire repository and find all files to validate across all types. NOTE: When set to false, only new or edited files will be parsed for validation."
                required: false
                type: boolean
                default: true
            validate_ansible:
                description: "Flag to enable or disable the linting process of the Ansible language."
                required: false
                type: boolean
                default: true
            validate_arm:
                description: "Flag to enable or disable the linting process of the ARM language."
                required: false
                type: boolean
                default: false
            validate_bash:
                description: "Flag to enable or disable the linting process of the Bash language."
                required: false
                type: boolean
                default: true
            validate_bash_exec:
                description: "Flag to enable or disable the linting process of the Bash language to validate if file is stored as executable."
                required: false
                type: boolean
                default: true
            validate_cpp:
                description: "Flag to enable or disable the linting process of the C++ language."
                required: false
                type: boolean
                default: false
            validate_checkov:
                description: "Flag to enable or disable the linting process with Checkov"
                required: false
                type: boolean
                default: false
            validate_clang_format:
                description: "Flag to enable or disable the linting process of the C++/C language with clang-format."
                required: false
                type: boolean
                default: false
            validate_clojure:
                description: "Flag to enable or disable the linting process of the Clojure language."
                required: false
                type: boolean
                default: false
            validate_cloudformation:
                description: "Flag to enable or disable the linting process of the AWS Cloud Formation language."
                required: false
                type: boolean
                default: false
            validate_coffeescript:
                description: "Flag to enable or disable the linting process of the CoffeeScript language."
                required: false
                type: boolean
                default: false
            validate_csharp:
                description: "Flag to enable or disable the linting process of the C# language."
                required: false
                type: boolean
                default: false
            validate_css:
                description: "Flag to enable or disable the linting process of the CSS language."
                required: false
                type: boolean
                default: true
            validate_dart:
                description: "Flag to enable or disable the linting process of the Dart language."
                required: false
                type: boolean
                default: true
            validate_dockerfile_hadolint:
                description: "Flag to enable or disable the linting process of the Docker language."
                required: false
                type: boolean
                default: true
            validate_editorconfig:
                description: "Flag to enable or disable the linting process with the EditorConfig."
                required: false
                type: boolean
                default: false
            validate_env:
                description: "Flag to enable or disable the linting process of the ENV language."
                required: false
                type: boolean
                default: true
            validate_gherkin:
                description: "Flag to enable or disable the linting process of the Gherkin language."
                required: false
                type: boolean
                default: false
            validate_github_actions:
                description: "Flag to enable or disable the linting process of the GitHub Actions."
                required: false
                type: boolean
                default: true
            validate_gitleaks:
                description: "Flag to enable or disable the linting process of the secrets."
                required: false
                type: boolean
                default: true
            validate_go:
                description: "Flag to enable or disable the linting process of the individual Golang files. Set this to false if you want to lint Go modules. See the VALIDATE_GO_MODULES variable."
                required: false
                type: boolean
                default: true
            validate_go_modules:
                description: "Flag to enable or disable the linting process of Go modules. Super-linter considers a directory to be a Go module if it contains a file named go.mod."
                required: false
                type: boolean
                default: true
            validate_go_releaser:
                description: "Flag to enable or disable the linting process of the GoReleaser config file."
                required: false
                type: boolean
                default: true
            validate_google_java_format:
                description: "Flag to enable or disable the linting process of the Java language. (Utilizing: google-java-format)"
                required: false
                type: boolean
                default: true
            validate_groovy:
                description: "Flag to enable or disable the linting process of the groovy language."
                required: false
                type: boolean
                default: false
            validate_html:
                description: "Flag to enable or disable the linting process of the HTML language."
                required: false
                type: boolean
                default: true
            validate_java:
                description: "Flag to enable or disable the linting process of the Java language. (Utilizing: checkstyle)"
                required: false
                type: boolean
                default: false
            validate_javascript_es:
                description: "Flag to enable or disable the linting process of the JavaScript language. (Utilizing: ESLint)"
                required: false
                type: boolean
                default: true
            validate_javascript_standard:
                description: "Flag to enable or disable the linting process of the JavaScript language. (Utilizing: standard)"
                required: false
                type: boolean
                default: true
            validate_jscpd:
                description: "Flag to enable or disable JSCPD."
                required: false
                type: boolean
                default: false
            validate_json:
                description: "Flag to enable or disable the linting process of the JSON language."
                required: false
                type: boolean
                default: true
            validate_jsonc:
                description: "Flag to enable or disable the linting process of the JSONC and JSON5 languages."
                required: false
                type: boolean
                default: true
            validate_jsx:
                description: "Flag to enable or disable the linting process for jsx files (Utilizing: ESLint)"
                required: false
                type: boolean
                default: true
            validate_kotlin:
                description: "Flag to enable or disable the linting process of the Kotlin language."
                required: false
                type: boolean
                default: false
            validate_kubernetes_kubeconform:
                description: "Flag to enable or disable the linting process of Kubernetes descriptors with Kubeconform"
                required: false
                type: boolean
                default: false
            validate_latex:
                description: "Flag to enable or disable the linting process of the LaTeX language."
                required: false
                type: boolean
                default: false
            validate_lua:
                description: "Flag to enable or disable the linting process of the language."
                required: false
                type: boolean
                default: false
            validate_markdown:
                description: "Flag to enable or disable the linting process of the Markdown language."
                required: false
                type: boolean
                default: true
            validate_natural_language:
                description: "Flag to enable or disable the linting process of the language."
                required: false
                type: boolean
                default: true
            validate_openapi:
                description: "Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP built-in linter)"
                required: false
                type: boolean
                default: true
            validate_perl:
                description: "Flag to enable or disable the linting process of the Perl language."
                required: false
                type: boolean
                default: true
            validate_php:
                description: "Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP built-in linter) (keep for backward compatibility)"
                required: false
                type: boolean
                default: true
            validate_php_builtin:
                description: "Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP built-in linter)"
                required: false
                type: boolean
                default: true
            validate_php_phpcs:
                description: "| Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP CodeSniffer) |"
                required: false
                type: boolean
                default: true
            validate_php_phpstan:
                description: "Flag to enable or disable the linting process of the PHP language. (Utilizing: PHPStan)"
                required: false
                type: boolean
                default: true
            validate_php_psalm:
                description: "Flag to enable or disable the linting process of the PHP language. (Utilizing: PSalm)"
                required: false
                type: boolean
                default: true
            validate_powershell:
                description: "Flag to enable or disable the linting process of the Powershell language."
                required: false
                type: boolean
                default: true
            validate_protobuf:
                description: "Flag to enable or disable the linting process of the Protobuf language."
                required: false
                type: boolean
                default: false
            validate_python:
                description: "Flag to enable or disable the linting process of the Python language. (Utilizing: pylint) (keep for backward compatibility)"
                required: false
                type: boolean
                default: true
            validate_python_black:
                description: "Flag to enable or disable the linting process of the Python language. (Utilizing: black)"
                required: false
                type: boolean
                default: false
            validate_python_flake8:
                description: "Flag to enable or disable the linting process of the Python language. (Utilizing: flake8)"
                required: false
                type: boolean
                default: false
            validate_python_isort:
                description: "Flag to enable or disable the linting process of the Python language. (Utilizing: isort)"
                required: false
                type: boolean
                default: false
            validate_python_mypy:
                description: "Flag to enable or disable the linting process of the Python language. (Utilizing: mypy)"
                required: false
                type: boolean
                default: false
            validate_python_pylint:
                description: "Flag to enable or disable the linting process of the Python language. (Utilizing: pylint)"
                required: false
                type: boolean
                default: true
            validate_python_ruff:
                description: "Flag to enable or disable the linting process of the Python language. (Utilizing: ruff)"
                required: false
                type: boolean
                default: false
            validate_r:
                description: "Flag to enable or disable the linting process of the R language."
                required: false
                type: boolean
                default: false
            validate_raku:
                description: "Flag to enable or disable the linting process of the Raku language."
                required: false
                type: boolean
                default: false
            validate_renovate:
                description: "Flag to enable or disable the linting process of the Renovate configuration files."
                required: false
                type: boolean
                default: false
            validate_ruby:
                description: "Flag to enable or disable the linting process of the Ruby language."
                required: false
                type: boolean
                default: true
            validate_rust_2015:
                description: "Flag to enable or disable the linting process of the Rust language. (edition: 2015)"
                required: false
                type: boolean
                default: false
            validate_rust_2018:
                description: "Flag to enable or disable the linting process of Rust language. (edition: 2018)"
                required: false
                type: boolean
                default: false
            validate_rust_2021:
                description: "Flag to enable or disable the linting process of Rust language. (edition: 2021)"
                required: false
                type: boolean
                default: false
            validate_rust_clippy:
                description: "Flag to enable or disable the clippy linting process of Rust language."
                required: false
                type: boolean
                default: false
            validate_scalafmt:
                description: "Flag to enable or disable the linting process of Scala language. (Utilizing: scalafmt --test)"
                required: false
                type: boolean
                default: true
            validate_shell_shfmt:
                description: "Flag to enable or disable the linting process of Shell scripts. (Utilizing: shfmt)"
                required: false
                type: boolean
                default: false
            validate_snakemake_lint:
                description: "Flag to enable or disable the linting process of Snakefiles. (Utilizing: snakemake --lint)"
                required: false
                type: boolean
                default: false
            validate_snakemake_snakefmt:
                description: "Flag to enable or disable the linting process of Snakefiles. (Utilizing: snakefmt)"
                required: false
                type: boolean
                default: false
            validate_states:
                description: "Flag to enable or disable the linting process for AWS States Language."
                required: false
                type: boolean
                default: false
            validate_sql:
                description: "Flag to enable or disable the linting process of the SQL language."
                required: false
                type: boolean
                default: true
            validate_sqlfluff:
                description: "Flag to enable or disable the linting process of the SQL language. (Utilizing: sqlfuff)"
                required: false
                type: boolean
                default: false
            validate_tekton:
                description: "Flag to enable or disable the linting process of the Tekton language."
                required: false
                type: boolean
                default: true
            validate_terraform_fmt:
                description: "Flag to enable or disable the formatting process of the Terraform files."
                required: false
                type: boolean
                default: false
            validate_terraform_terrascan:
                description: "Flag to enable or disable the linting process of the Terraform language for security related issues."
                required: false
                type: boolean
                default: false
            validate_terraform_tflint:
                description: "Flag to enable or disable the linting process of the Terraform language. (Utilizing tflint)"
                required: false
                type: boolean
                default: false
            validate_terragrunt:
                description: "Flag to enable or disable the linting process for Terragrunt files."
                required: false
                type: boolean
                default: false
            validate_tsx:
                description: "Flag to enable or disable the linting process for tsx files (Utilizing: ESLint)"
                required: false
                type: boolean
                default: true
            validate_typescript_es:
                description: "Flag to enable or disable the linting process of the TypeScript language. (Utilizing: ESLint)"
                required: false
                type: boolean
                default: true
            validate_typescript_standard:
                description: "Flag to enable or disable the linting process of the TypeScript language. (Utilizing: ts-standard)"
                required: false
                type: boolean
                default: true
            validate_xml:
                description: "Flag to enable or disable the linting process of the XML language."
                required: false
                type: boolean
                default: true
            validate_yaml:
                description: "Flag to enable or disable the linting process of the YAML language."
                required: false
                type: boolean
                default: true
            yaml_error_on_warning:
                description: "Flag to enable or disable the error on warning for Yamllint."
                required: false
                type: boolean
                default: true
        secrets:
            token:
                required: true

jobs:

    super-linter:
        name: Super-Linter
        runs-on: ubuntu-latest

        permissions:
            contents: read
            packages: read
            statuses: write     # to report GitHub Actions status checks

        steps:

            - name: Checkout
              uses: actions/checkout@v4
              with:
                  # super-linter needs the full git history to get the
                  # list of files that changed across commits
                  fetch-depth: 0

            - name: Set DEFAULT_BRANCH to PR Target
              # If base_ref has a value, this is a PR
              # Save the PR target branch name to a variable for use in linter config
              # Pass the string between job steps by echoing to $GITHUB_ENV
              if: ${{ github.base_ref != '' }}
              run: echo "DEFAULT_BRANCH=${{ github.base_ref }}" >> $GITHUB_ENV

            - name: Set DEFAULT_BRANCH to Current Branch
              # If base_ref has no value, this is just a commit on a branch
              # Need to strip refs/head from github.ref to find the current branch name,
              # then save the current branch name to a variable for use in linter config
              # Pass the string between job steps by echoing to $GITHUB_ENV
              if: ${{ github.base_ref == '' }}
              run: echo "DEFAULT_BRANCH=$(echo '${{ github.ref }}' | sed 's/refs\/heads\///')" >> $GITHUB_ENV

            # used as a sanity check to ensure we're only linting all files on release branches
            - name: Linting All Files?
              run: echo "VALIDATE_ALL_CODEBASE=${{ !contains(github.event_name, 'pull_request') }}"

            # customise exclude paths and files with regex
            - name: FILTER_REGEX_EXCLUDE
              if: ${{ inputs.filter-regex-exclude }}
              run: echo "FILTER_REGEX_EXCLUDE=${{ inputs.filter-regex-exclude }}" >> $GITHUB_ENV

            # run many linters against changed files on PRs, and ALL files on commit to branch
            # https://github.com/marketplace/actions/super-linter
            - name: Lint Codebase
              uses: super-linter/super-linter/slim@v6.6.0       # using slim version of super-linter
              with:
                  bash_severity: ${{ inputs.bash_severity }}
                  create_log_file: ${{ inputs.create_log_file }}
                  disable_errors: ${{ inputs.disable_errors }}
                  dockerfile_hadolint_file_name: ${{ inputs.dockerfile_hadolint_file_name }}
                  filter_regex_exclude: ${{ inputs.filter_regex_exclude }}
                  filter_regex_include: ${{ inputs.filter_regex_include }}
                  ignore_generated_files: ${{ inputs.ignore_generated_files }}
                  ignore_gitignored_files: ${{ inputs.ignore_gitignored_files }}
                  log_level: ${{ inputs.log_level }}
                  save_super_linter_output: ${{ inputs.save_super_linter_output }}
                  super_linter_output_directory_name: ${{ inputs.super_linter_output_directory_name }}
                  suppress_file_type_warn: ${{ inputs.suppress_file_type_warn }}
                  suppress_possum: ${{ inputs.suppress_possum }}
                  validate_all_codebase: ${{ !contains(github.event_name, 'pull_request') }}
                  validate_ansible: ${{ inputs.validate_ansible }}
                  validate_arm: ${{ inputs.validate_arm }}
                  validate_bash: ${{ inputs.validate_bash }}
                  validate_bash_exec: ${{ inputs.validate_bash_exec }}
                  validate_cpp: ${{ inputs.validate_cpp }}
                  validate_chekov: ${{ inputs.validate_chekov }}
                  validate_clang_format: ${{ inputs.validate_clang_format }}
                  validate_clojure: ${{ inputs.validate_clojure }}
                  validate_cloudformation: ${{ inputs.validate_cloudformation }}
                  validate_coffeescript: ${{ inputs.validate_coffeescript }}
                  validate_csharp: ${{ inputs.validate_csharp }}
                  validate_css: ${{ inputs.validate_css }}
                  validate_dart: ${{ inputs.validate_dart }}
                  validate_dockerfile_hadolint: ${{ inputs.validate_dockerfile_hadolint }}
                  validate_editorconfig: false          # turn off editorconfig-checker, which flags too many false positives
                  validate_env: ${{ inputs.validate_env }}
                  validate_gherkin: ${{ inputs.validate_gherkin }}
                  validate_github_actions: ${{ inputs.validate_github_actions }}
                  validate_gitleaks: ${{ inputs.validate_gitleaks }}
                  validate_go: ${{ inputs.validate_go }}
                  validate_go_modules: ${{ inputs.validate_go_modules }}
                  validate_go_releaser: ${{ inputs.validate_go_releaser }}
                  validate_google_java_format: ${{ inputs.validate_google_java_format }}
                  validate_groovy: ${{ inputs.validate_groovy }}
                  validate_html: ${{ inputs.validate_html }}
                  validate_java: ${{ inputs.validate_java }}
                  validate_javascript_es: ${{ inputs.validate_javascript_es }}
                  validate_javascript_standard: ${{ inputs.validate_javascript_standard }}
                  validate_jscpd: false                 # turn off JSCPD copy/paste detection - results in lots of results for examples and devOps repos
                  validate_json: ${{ inputs.validate_json }}
                  validate_jsonc: ${{ inputs.validate_jsonc }}
                  validate_jsx: ${{ inputs.validate_jsx }}
                  validate_kotlin: ${{ inputs.validate_kotlin }}
                  validate_kubernetes_kubeconform: ${{ inputs.validate_kubernetes_kubeconform }}
                  validate_latex: ${{ inputs.validate_latex }}
                  validate_lua: ${{ inputs.validate_lua }}
                  validate_markdown: ${{ inputs.validate_markdown }}
                  validate_natural_language: ${{ inputs.validate_natural_language }}
                  validate_openapi: ${{ inputs.validate_openapi }}
                  validate_perl: ${{ inputs.validate_perl }}
                  validate_php: ${{ inputs.validate_php }}
                  validate_php_builtin: ${{ inputs.validate_php_builtin }}
                  validate_php_phpcs: ${{ inputs.validate_php_phpcs }}
                  validate_php_phpstan: ${{ inputs.validate_php_phpstan }}
                  validate_php_psalm: ${{ inputs.validate_php_psalm }}
                  validate_powershell: ${{ inputs.validate_powershell }}
                  validate_protobuf: ${{ inputs.validate_protobuf }}
                  validate_python: ${{ inputs.validate_python }}
                  validate_python_black: ${{ inputs.validate_python_black }}
                  validate_python_flake8: ${{ inputs.validate_python_flake8 }}
                  validate_python_isort: ${{ inputs.validate_python_isort }}
                  validate_python_mypy: ${{ inputs.validate_python_mypy }}
                  validate_python_pylint: ${{ inputs.validate_python_pylint }}
                  validate_python_ruff: ${{ inputs.validate_python_ruff }}
                  validate_r: ${{ inputs.validate_r }}
                  validate_raku: ${{ inputs.validate_raku }}
                  validate_renovate: ${{ inputs.validate_renovate }}
                  validate_ruby: ${{ inputs.validate_ruby }}
                  validate_rust_2015: ${{ inputs.validate_rust_2015 }}
                  validate_rust_2018: ${{ inputs.validate_rust_2018 }}
                  validate_rust_2021: ${{ inputs.validate_rust_2021 }}
                  validate_rust_clippy: ${{ inputs.validate_rust_clippy }}
                  validate_scalafmt: ${{ inputs.validate_scalafmt }}
                  validate_shell_shfmt: false               # turn off shfmt - we already have shellcheck
                  validate_snakemake_lint: ${{ inputs.validate_snakemake_lint }}
                  validate_snakemake_snakefmt: ${{ inputs.validate_snakemake_snakefmt }}
                  validate_states: ${{ inputs.validate_states }}
                  validate_sql: ${{ inputs.validate_sql }}
                  validate_sqlfluff: ${{ inputs.validate_sqlfluff }}
                  validate_tekton: ${{ inputs.validate_tekton }}
                  validate_terraform_fmt: ${{ inputs.validate_terraform_fmt }}
                  validate_terraform_terrascan: ${{ inputs.validate_terraform_terrascan }}
                  validate_terraform_tflint: ${{ inputs.validate_terraform_tflint }}
                  validate_terragrunt: ${{ inputs.validate_terragrunt }}
                  validate_tsx: ${{ inputs.validate_tsx }}
                  validate_typescript_es: ${{ inputs.validate_typescript_es }}
                  validate_typescript_standard: ${{ inputs.validate_typescript_standard }}
                  validate_xml: ${{ inputs.validate_xml }}
                  validate_yaml: ${{ inputs.validate_yaml }}
                  yaml_error_on_warning: ${{ inputs.yaml_error_on_warning }}
              env:
                  # to report GitHub Actions status checks
                  GITHUB_TOKEN: ${{ secrets.token }}
                  # by default, super-linter assumes our repo default branch doesn't change
                  # it also assumes our PRs are always against that default branch
                  # for multi-trunk (releases) repos, this gets the base branch from the previous steps
                  # see issue https://github.com/github/super-linter/issues/1123
                  DEFAULT_BRANCH: ${{ env.DEFAULT_BRANCH }}
                  # prevent Kubernetes CRD API's from causing kubeval to fail
                  # also change schema location to an up-to-date list
                  # https://github.com/yannh/kubernetes-json-schema/#kubeval
                  KUBERNETES_KUBEVAL_OPTIONS: --ignore-missing-schemas --schema-location https://github.com/yannh/kubernetes-json-schema/master/
